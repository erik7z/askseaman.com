union LikeResponse = Question | Comment
union VoteResponse = Question | Answer
union SubscribeResponse = Question | Tag
union RegisterResponse = LoginResponse | FormError

# type FieldError {
# 	field: String!
# 	message: String!
# }

# type FormSuccess {
# 	text: String!
# }

type FormError {
	message: String!
}

type LoginResponse {
	nodeId: ID!
	email: String!
	password: String! #TODO: hide password from outside api (which is required in resolver to compare with BCRYPT)
	name: String!
	surname: String!
	token: String
	roles: [Role]
}

type RedirectUriResponse {
	redirect: String!
	status: ResponseStatus!
	message: String
}

type DeleteQuestionResponse {
	nodeId: ID! @id
	title: String!
	text: String!
}

type DeleteAnswerResponse {
	nodeId: ID! @id
	text: String!
}

type DeleteCommentResponse {
	nodeId: ID! @id
	text: String!
}

type DeleteTagResponse {
	name: String!
}
